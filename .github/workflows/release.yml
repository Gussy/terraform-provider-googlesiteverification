on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
  build:
    name: Build Binaries
    needs: [create_release]
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm]
        exclude:
          - os: darwin
            arch: arm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build binary
        uses: ./.github/actions/build-action
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
      - name: Zip binary
        run: |
          zip -j terraform-provider-googlesiteverification_${{ matrix.os }}_${{ matrix.arch }}.zip terraform-provider-googlesiteverification
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./terraform-provider-googlesiteverification_${{ matrix.os }}_${{ matrix.arch }}.zip
          asset_name: terraform-provider-googlesiteverification_${{ matrix.os }}_${{ matrix.arch }}.zip
          asset_content_type: application/zip
